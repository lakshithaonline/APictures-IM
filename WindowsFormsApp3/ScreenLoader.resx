<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuPanel3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAABYUAAACqCAYAAADydyCdAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAEnQAABJ0Ad5mH3gAAAavSURBVHhe7d2tjhNRAIbhSlw7syHB7UrkypVcAhK5Ermy
        cu8CyWWghiORSCQSiUTsKUMnnGTTMuFPtfM9X/Jk083pXMCbyenKzMzMzMzMzMzMzOxgY7l4vveilv52
        V7p7AAAAAABOw9Rtp347lvV1S7r/v/3D7uqw+fS99CMAAAAAAKetDv3nKRSP5fJJy7x/t+nN4DpsPsw9
        FAAAAACA09Ze9r1pyff3m1413n/h2/FDAAAAAAA4L7V025Z+59feEBaEAQAAAAAWYrpvuCXgX+fKCAAA
        AACAZanD5stY1puWgR83/ajc3BcAAAAAADhvu6F721Lw46ZfpZs7DAAAAADAeZuuDT54W3j/4XruIAAA
        AAAAy/BQLl62JDxdHdG9mjsEAAAAAMAy1NJtWxJ2nzAAAAAAwNLtSnffkvBqNX2YOwQAAAAAwDKIwgAA
        AAAAQURhAAAAAIAgojAAAAAAQBBRGAAAAAAgiCgMAAAAABBEFAYAAAAACCIKAwAAAAAEEYUBAAAAAIKI
        wgAAAAAAQURhAAAAAIAgojAAAAAAQBBRGAAAAAAgiCgMAAAAABBEFAYAAAAACCIKAwAAAAAEEYUBAAAA
        AIKIwgAAAAAAQURhAAAAAIAgojAAAAAAQBBRGAAAAAAgiCgMAAAAABBEFAYAAAAACCIKAwAAAAAEEYUB
        AAAAAIKIwgAAAAAAQURhAAAAAIAgojAAAAAAQBBRGAAAAAAgiCgMAAAAABBEFAYAAAAACCIKAwAAAAAE
        EYUBAAAAAIKIwgAAAAAAQURhAAAAAIAgojAAAAAAQBBRGAAAAAAgiCgMAAAAABBEFAYAAAAACCIKAwAA
        AAAEEYUBAAAAAIKIwgAAAAAAQURhAAAAAIAgojAAAAAAQBBRGAAAAAAgiCgMAAAAABBEFAYAAAAACCIK
        AwAAAAAEEYUBAAAAAIKIwgAAAAAAQURhAAAAAIAgojAAAAAAQBBRGAAAAAAgiCgMAAAAABBEFAYAAAAA
        CCIKAwAAAAAEEYUBAAAAAIKIwgAAAAAAQURhAAAAAIAgojAAAAAAQBBRGAAAAAAgiCgMAAAAABBEFAYA
        AAAACCIKAwAAAAAEEYUBAAAAAIKIwgAAAAAAQURhAAAAAIAgojAAAAAAQBBRGAAAAAAgiCgMAAAAABBE
        FAYAAAAACCIKAwAAAAAEEYUBAAAAAIKIwgAAAAAAQURhAAAAAIAgojAAAAAAQBBRGAAAAAAgiCgMAAAA
        ABBEFAYAAAAACCIKAwAAAAAEEYUBAAAAAIKIwgAAAAAAQURhAAAAAIAgojAAAAAAQBBRGAAAAAAgiCgM
        AAAAABBEFAYAAAAACCIKAwAAAAAEEYUBAAAAAIKIwgAAAAAAQURhAAAAAIAgojAAAAAAQBBRGAAAAAAg
        iCgMAAAAABBEFAYAAAAACCIKAwAAAAAEEYUBAAAAAIKIwgAAAAAAQURhAAAAAIAgojAAAAAAQBBRGAAA
        AAAgiCgMAAAAABBEFAYAAAAACCIKAwAAAAAEEYUBAAAAAIKIwgAAAAAAQURhAAAAAIAgojAAAAAAQBBR
        GAAAAAAgiCgMAAAAABBEFAYAAAAACCIKAwAAAAAEEYUBAAAAAIKIwgAAAAAAQURhAAAAAIAgojAAAAAA
        QBBRGAAAAAAgiCgMAAAAABBEFAYAAAAACCIKAwAAAAAEEYUBAAAAAIKIwgAAAAAAQURhAAAAAIAgojAA
        AAAAQBBRGAAAAAAgiCgMAAAAABBEFAYAAAAACCIKAwAAAAAEEYUBAAAAAIKIwgAAAAAAQURhAAAAAIAg
        ojAAAAAAQBBRGAAAAAAgiCgMAAAAABBEFAYAAAAACCIKAwAAAAAEEYUBAAAAAIKIwgAAAAAAQURhAAAA
        AIAgojAAAAAAQBBRGAAAAAAgiCgMAAAAABBEFAYAAAAACCIKAwAAAAAEEYUBAAAAAIKIwgAAAAAAQQ6i
        cC3ddu4QAAAAAADLcBSF+9u5QwAAAAAALMNBFN7/4+b4AAAAAAAAy1FL96ol4dVqLJdP6tB/nTsIAAAA
        AMD5G8v6qiXhn9u979/MHQQAAAAA4LzVof/YUvDjxvL0WR02X+a+AAAAAADAearD5ttY1tctBR/uoVy8
        nPsSAAAAAADnqZZu2xLw/FwjAQAAAACwDLuhf9fS7+9XS3/rh+cAAAAAAM7TdGXEH98QPt50x/Bu6Mrc
        AwEAAAAAOE112Hza/71pqfffN5b1VS3d613p7gEAAAAAOE219HdjuXje0q6ZmZmZmZmZmZmZ2Wr1A2VW
        ZVK/U3PXAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="kryptonPalette1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>118, 17</value>
  </metadata>
</root>